---
import Layout from "@layouts/Layout.astro";
import apiClient from "@lib/kiara_api";
import PluginGithubLink from "@components/PluginGithubLink.svelte";
import { assertMenuLinkedWithMenuItem } from "@rgossiaux/svelte-headlessui/test-utils/accessibility-assertions";

export async function getStaticPaths() {
  const plugins_data = await apiClient.list_installed_plugins();

  return [
    { params: { plugin: "kiara" } },
    ...Object.entries(plugins_data).map(([name, _]) => {
      return { params: { plugin: name.replaceAll("-", "_") } };
    }),
  ];
}

const { plugin } = Astro.params;

const operations = Object.entries(
  await apiClient.list_operations({
    python_package: plugin,
    include_internal: true,
  })
);

const data_types = Object.entries(await apiClient.list_data_types([], plugin));

const modules = Object.entries(
  await apiClient.list_modules({ python_package: plugin })
);

// todo get this from metadata when that exists!
const plugin_url = operations[0]?.[1].context.references.source_repo.url;
---

<Layout title={`${plugin} API documentation`}>
  <PluginGithubLink plugin_name={plugin} plugin_url={plugin_url} />

  <h2>Operations</h2>
  {
    operations.length > 0 ? (
      <ul>
        {operations.map(([k, v]) => (
          <li>
            <a href={`/plugins/${plugin}/operations/${k}`}>{k}</a>:{" "}
            {v.documentation.description}
          </li>
        ))}
      </ul>
    ) : (
      <p>This plugin doesn't provide any operations.</p>
    )
  }
  <h2>Modules</h2>
  {
    modules.length > 0 ? (
      <ul>
        {modules.map(([k, v]) => (
          <li>
            <a href={`/plugins/${plugin}/modules/${k}`}>{k}</a>:{" "}
            {v.documentation.description}
          </li>
        ))}
      </ul>
    ) : (
      <p>This plugin doesn't provide any data types.</p>
    )
  }
  <h2>Data Types</h2>
  {
    data_types.length > 0 ? (
      <ul>
        {data_types.map(([k, v]) => (
          <li>
            <a href={`/plugins/${plugin}/data_types/${k}`}>{k}</a>:{" "}
            {v.documentation.description}
          </li>
        ))}
      </ul>
    ) : (
      <p>This plugin doesn't provide any data types.</p>
    )
  }
</Layout>
