---
import Layout from "@layouts/Layout.astro";
import apiClient from "@lib/kiara_api";
import PluginGithubLink from "@components/PluginGithubLink.svelte";

export async function getStaticPaths() {
  const plugins_data = await apiClient.list_installed_plugins();

  return [
    { params: { plugin: "kiara" } },
    ...Object.entries(plugins_data).map(([name, _]) => {
      return { params: { plugin: name.replaceAll("-", "_") } };
    }),
  ];
}

const { plugin } = Astro.params;

const operations = Object.entries(
  await apiClient.list_operations({ python_package: plugin })
);

const data_types = Object.entries(await apiClient.list_data_types([], plugin));
// todo get this from metadata when that exists!
const plugin_url = operations[0]?.[1].context.references.source_repo.url;

// get modules with `kiara module list` -> GET /modules/
// data about modules with `kiara module explain <moduleID>` -> POST? /modules/name
// hide this and the pydantic backing classes

// TODO SEARCH -> titles, tags on operations, labels we need to help people with discoverability!
// TODO also display/sort operation tags
---

<Layout title={plugin}>
  <main
    class="prose prose-slate dark:prose-invert max-w-screen-xl w-full mx-auto px-4"
  >
    <a class="m-4" href="/">&larr; home</a>
    <h1 class="flex items-center justify-between">
      {plugin}
      <PluginGithubLink plugin_name={plugin} {plugin_url} />
    </h1>

    <!--TODO do plugins have any kind of summary info?-->
    <h2>Operations</h2>
    {
      operations.length > 0 ? (
        <ul>
          {operations.map(([k, v]) => (
            <li>
              <a href={`/plugins/${plugin}/operations/${k}`}>{k}</a>:{" "}
              {v.documentation.description}
            </li>
          ))}
        </ul>
      ) : (
        <p>This plugin doesn't provide any operations.</p>
      )
    }
    <h2>Data Types</h2>
    {
      data_types.length > 0 ? (
        <ul>
          {data_types.map(([k, v]) => (
            <li>
              <a href={`/plugins/${plugin}/data_types/${k}`}>{k}</a>:{" "}
              {v.documentation.description}
            </li>
          ))}
        </ul>
      ) : (
        <p>This plugin doesn't provide any data types.</p>
      )
    }
  </main>
</Layout>
